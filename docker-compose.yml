services:
  # EarthCare Directory - Static Site
  directory:
    build:
      context: ./directory
      dockerfile: Dockerfile
    container_name: earthcare-directory
    restart: unless-stopped
    ports:
      - "3003:80"
    networks:
      - earthcare-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.directory.rule=Host(`app.earthcare.network`)"
      - "traefik.http.routers.directory.entrypoints=websecure"
      - "traefik.http.routers.directory.tls.certresolver=letsencrypt"
      - "traefik.http.services.directory.loadbalancer.server.port=80"

  # Twenty CRM Application
  twenty-server:
    build:
      context: .
      dockerfile: Dockerfile.twenty
    container_name: earthcare-crm
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:KeepGoin!!!@postgres:5432/twenty
      - REDIS_URL=redis://redis:6379
      - SERVER_URL=https://crm.app.earthcare.network
      - FRONT_BASE_URL=https://crm.app.earthcare.network
      - ACCESS_TOKEN_SECRET=earthcare-access-token-secret-2025
      - REFRESH_TOKEN_SECRET=earthcare-refresh-token-secret-2025
      - LOGIN_TOKEN_SECRET=earthcare-login-token-secret-2025
      - SUPPORT_EMAIL=support@earthcare.network
      - PORT=3000
    depends_on:
      - postgres
      - redis
    networks:
      - earthcare-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crm.rule=Host(`crm.app.earthcare.network`)"
      - "traefik.http.routers.crm.entrypoints=websecure"
      - "traefik.http.routers.crm.tls.certresolver=letsencrypt"
      - "traefik.http.services.crm.loadbalancer.server.port=3000"

  # PostgreSQL Database
  postgres:
    image: postgis/postgis:16-3.4-alpine
    container_name: earthcare-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=twenty
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=KeepGoin!!!
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - earthcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d twenty"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: earthcare-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - earthcare-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  earthcare-network:
    driver: bridge