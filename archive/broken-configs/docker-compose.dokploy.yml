version: "3.8"

services:
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: default
      POSTGRES_USER: twenty
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-twentypassword123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - earthcare
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twenty -d default"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - earthcare
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  twenty:
    image: ghcr.io/twentyhq/twenty:latest
    environment:
      SERVER_URL: https://crm.app.earthcare.network
      FRONT_BASE_URL: https://crm.app.earthcare.network
      PG_DATABASE_URL: postgres://twenty:${POSTGRES_PASSWORD:-twentypassword123}@postgres:5432/default
      REDIS_URL: redis://redis:6379
      ACCESS_TOKEN_SECRET: ${APP_SECRET:-defaultsecret123}
      LOGIN_TOKEN_SECRET: ${APP_SECRET:-defaultsecret123}
      REFRESH_TOKEN_SECRET: ${APP_SECRET:-defaultsecret123}
      FILE_TOKEN_SECRET: ${APP_SECRET:-defaultsecret123}
      CORS_ALLOWED_ORIGINS: "https://crm.app.earthcare.network,https://app.crm.app.earthcare.network"
      IS_SIGN_UP_DISABLED: "false"
      SUPPORT_DRIVER: none
      MESSAGE_QUEUE_TYPE: redis
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - earthcare
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.twenty.rule=Host(`crm.app.earthcare.network`) || Host(`app.crm.app.earthcare.network`)
      - traefik.http.routers.twenty.entrypoints=websecure
      - traefik.http.routers.twenty.tls.certresolver=letsencrypt
      - traefik.http.services.twenty.loadbalancer.server.port=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  directory:
    image: nginx:alpine
    volumes:
      - ./directory:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
    networks:
      - earthcare
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.directory.rule=Host(`app.earthcare.network`)
      - traefik.http.routers.directory.entrypoints=websecure
      - traefik.http.routers.directory.tls.certresolver=letsencrypt
      - traefik.http.services.directory.loadbalancer.server.port=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp-server:
    image: node:18-alpine
    working_dir: /app
    command: ["sh", "-c", "npm install && node server.js"]
    environment:
      CRM_URL: https://crm.app.earthcare.network
      DIRECTORY_URL: https://app.earthcare.network
    volumes:
      - ./mcp-server:/app:ro
    ports:
      - "8090:8080"
    depends_on:
      - twenty
      - directory
    networks:
      - earthcare
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.mcp.rule=Host(`mcp.earthcare.network`)
      - traefik.http.routers.mcp.entrypoints=websecure
      - traefik.http.routers.mcp.tls.certresolver=letsencrypt
      - traefik.http.services.mcp.loadbalancer.server.port=8080

networks:
  earthcare:
    external: false

volumes:
  postgres_data:
  redis_data: