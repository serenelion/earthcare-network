version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: earthcare-postgres
    environment:
      POSTGRES_DB: earthcare_network
      POSTGRES_USER: earthcare
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - earthcare-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: earthcare-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - earthcare-network

  # Twenty CRM Backend
  twenty-server:
    build:
      context: .
      dockerfile: packages/twenty-server/Dockerfile
    container_name: earthcare-crm-server
    environment:
      # Database Configuration
      PG_DATABASE_URL: postgresql://earthcare:${POSTGRES_PASSWORD}@postgres:5432/earthcare_network
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      
      # Application URLs
      FRONTEND_URL: https://crm.app.earthcare.network
      BACKEND_URL: https://api.earthcare.network
      CRM_FRONTEND_URL: https://crm.app.earthcare.network
      
      # Authentication
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      LOGIN_TOKEN_SECRET: ${LOGIN_TOKEN_SECRET}
      
      # Email Configuration
      EMAIL_FROM_ADDRESS: no-reply@earthcare.network
      EMAIL_SYSTEM_ADDRESS: system@earthcare.network
      
      # AI Agent Configuration
      APOLLO_API_KEY: ${APOLLO_API_KEY}
      LINKEDIN_API_KEY: ${LINKEDIN_API_KEY}
      HUNTER_API_KEY: ${HUNTER_API_KEY}
      
      # Spatial Network Integration
      SPATIAL_NETWORK_API_KEY: ${SPATIAL_NETWORK_API_KEY}
      SPATIAL_NETWORK_API_URL: ${SPATIAL_NETWORK_API_URL}
      
      # Server Configuration
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3001:3000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - earthcare-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.twenty-server.rule=Host(`api.earthcare.network`)"
      - "traefik.http.routers.twenty-server.tls=true"
      - "traefik.http.routers.twenty-server.tls.certresolver=letsencrypt"

  # Twenty CRM Frontend
  twenty-front:
    build:
      context: .
      dockerfile: packages/twenty-front/Dockerfile
    container_name: earthcare-crm-frontend
    environment:
      REACT_APP_SERVER_BASE_URL: https://api.earthcare.network
      REACT_APP_FRONTEND_URL: https://crm.app.earthcare.network
      GENERATE_SOURCEMAP: "false"
    ports:
      - "3002:3000"
    depends_on:
      - twenty-server
    restart: unless-stopped
    networks:
      - earthcare-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.twenty-front.rule=Host(`crm.app.earthcare.network`)"
      - "traefik.http.routers.twenty-front.tls=true"
      - "traefik.http.routers.twenty-front.tls.certresolver=letsencrypt"

  # Business Directory (Static Files)
  directory:
    build:
      context: ./directory
      dockerfile: Dockerfile
    container_name: earthcare-directory
    ports:
      - "3003:80"
    restart: unless-stopped
    networks:
      - earthcare-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.directory.rule=Host(`app.earthcare.network`)"
      - "traefik.http.routers.directory.tls=true"
      - "traefik.http.routers.directory.tls.certresolver=letsencrypt"

  # Nginx Reverse Proxy (if needed for additional routing)
  nginx:
    image: nginx:alpine
    container_name: earthcare-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - twenty-server
      - twenty-front
      - directory
    restart: unless-stopped
    networks:
      - earthcare-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  earthcare-network:
    driver: bridge