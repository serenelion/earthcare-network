# Twenty CRM - Production Dockerfile
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package.json yarn.lock* ./
COPY packages/ ./packages/

# Install dependencies
RUN corepack enable yarn
RUN yarn install --frozen-lockfile

# Build the application
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set build environment
ENV NODE_ENV=production
ENV NX_DAEMON=false

# Build Twenty CRM
RUN yarn build:server

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 twenty

# Copy built application
COPY --from=builder --chown=twenty:nodejs /app/packages/twenty-server/dist ./dist
COPY --from=builder --chown=twenty:nodejs /app/packages/twenty-server/package.json ./package.json
COPY --from=builder --chown=twenty:nodejs /app/node_modules ./node_modules

# Expose port
EXPOSE 3000

# Set user
USER twenty

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

# Start the server
CMD ["node", "dist/src/main.js"]